---
name: Bug Report
description: Report a bug, error, or misbehavior
labels: ["bug"]
body:
- type: textarea
  attributes:
    label: What did you expect to happen?
    placeholder: When I do *foo*, it should do *bar*, but it did *baz*.
  validations:
    required: true
- type: textarea
  attributes:
    label: What actually happened?
    description: |
      + Provide the full stacktrace
    placeholder: |
      When I do *foo*, *baz* happens. Here is the stacktrace:

      ```
      Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      TypeError: foo() got an unexpected keyword argument 'baz'
      ```

  validations:
    required: true
- type: textarea
  attributes:
    label: Describe your attempts to resolve the issue
    description: |
      Describe resources you consulted or code you tried to fix your problem, and their result.

    placeholder: |
      I tried setting X to Y, then I tried Z. Here's what else I tried...

      ```python
      foo(baz=True)
      ```
- type: textarea
  attributes:
    label: Steps to reproduce
    description: How do we reproduce your issue? Provide a [minimal working example (MWE)](https://stackoverflow.com/help/minimal-reproducible-example).
    placeholder: |

      ```python
      def foo(bar):
        return "hello world"

      foo(baz=True)  # <- fails
      ```

  validations:
    required: true
- type: textarea
  attributes:
    label: System Information
    description: |
      Please provide additional information about your enviroment:
        + Python version:
        + SPFlow version:
        + Operating system: (If Linux/MacOS, please provide the output of `uname -a`)
    placeholder: |
        + Python version: 3.10.0
        + SPFlow version: 1.0.0
        + Operating system: Linux fedora 5.14.14-300.fc35.x86_64 #1 SMP Wed Oct 20 16:14:50 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux

  validations:
    required: true

- type: textarea
  attributes:
    label: Installed Python Packages
    description: |
      Provide the output of `pip freeze` wrapped in `<details></details>` tags:

      ```
      <details>
        packages ...
      </details>
      ```

    placeholder: |
      <details>
        packages ...
      </details>

  validations:
    required: true
